1. In this lesson, you created a middleware function called asyncWrapper. Why?

wrap controllers to not repeat the code, avoid try/catch blocks; handling errors

2.
const getTask = asyncWrapper(async (req, res) => {
    const { id: taskID } = req.params;
    const task = await Task.findOne({ _id: taskID });
    if (!task) {
      // const error = new Error('Not Found')
      // error.status = 404;
      //  return next(error)
return next(createCustomError(`No task with id : ${taskID}`, 404))
    }
    res.status(200).json({ task });
})